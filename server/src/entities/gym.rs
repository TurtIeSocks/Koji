//! SeaORM Entity. Generated by sea-orm-codegen 0.10.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "gym")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub lat: f64,
    pub lon: f64,
    pub name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub url: Option<String>,
    pub last_modified_timestamp: Option<u32>,
    pub raid_end_timestamp: Option<u32>,
    pub raid_spawn_timestamp: Option<u32>,
    pub raid_battle_timestamp: Option<u32>,
    pub updated: u32,
    pub raid_pokemon_id: Option<u16>,
    pub guarding_pokemon_id: Option<u16>,
    pub available_slots: Option<u16>,
    pub team_id: Option<u8>,
    pub raid_level: Option<u8>,
    pub enabled: Option<u8>,
    pub ex_raid_eligible: Option<u8>,
    pub in_battle: Option<u8>,
    pub raid_pokemon_move_1: Option<u16>,
    pub raid_pokemon_move_2: Option<u16>,
    pub raid_pokemon_form: Option<u16>,
    pub raid_pokemon_cp: Option<u32>,
    pub raid_is_exclusive: Option<u8>,
    pub cell_id: Option<u64>,
    pub deleted: u8,
    pub total_cp: Option<u32>,
    pub first_seen_timestamp: u32,
    pub raid_pokemon_gender: Option<u8>,
    pub sponsor_id: Option<u16>,
    pub partner_id: Option<String>,
    pub raid_pokemon_costume: Option<u16>,
    pub raid_pokemon_evolution: Option<u8>,
    pub ar_scan_eligible: Option<u8>,
    pub power_up_level: Option<u16>,
    pub power_up_points: Option<u32>,
    pub power_up_end_timestamp: Option<u32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
